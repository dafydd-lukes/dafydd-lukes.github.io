<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Little Umbrellas</title><link href="http://dlukes.github.io/output/" rel="alternate"></link><link href="http://dlukes.github.io/output/feeds/os-x-tips.atom.xml" rel="self"></link><id>http://dlukes.github.io/output/</id><updated>2014-06-27T00:00:00+02:00</updated><entry><title>Filling (hardwrapping) paragraphs in Airmail with `par`</title><link href="http://dlukes.github.io/output/fill-par-in-airmail.html" rel="alternate"></link><updated>2014-06-27T00:00:00+02:00</updated><author><name>dlukes</name></author><id>tag:dlukes.github.io,2014-06-27:output/fill-par-in-airmail.html</id><summary type="html">&lt;h1&gt;tl;dr&lt;/h1&gt;
&lt;p&gt;Jump directly to &lt;a href="#solution"&gt;the proposed solution&lt;/a&gt;. Tested on OS X 10.9
(Mavericks).&lt;/p&gt;
&lt;h1&gt;Back story&lt;/h1&gt;
&lt;p&gt;Airmail is a great application -- being very happy with Gmail's in-browser UI,
it's honestly the first e-mail desktop client that I ever felt even remotely
tempted to use. It has:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a sleek, functional design&lt;/li&gt;
&lt;li&gt;almost flawless integration with Gmail (except for categories -- but there's
a
&lt;a href="http://airmail.tenderapp.com/help/discussions/suggestion-new-features/396-workaround-for-gmail-categories"&gt;not-too-hackish way&lt;/a&gt;
to deal with those)&lt;/li&gt;
&lt;li&gt;a Markdown compose mode (yay!) -- and tons of other good stuff.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Especially that last feature almost got me sold -- you see, I like my e-mail
hardwrapped (what Emacs calls "filling paragraphs"), because most of the time,
I view it on monitors that are too wide for soft line wrapping to achieve a
comfortable text width.&lt;/p&gt;
&lt;p&gt;(By the way, Airmail's layout deals with this issue very elegantly, but I know
I won't be using only Airmail. Plus there are the obvious
&lt;a href="https://wiki.openstack.org/wiki/MailingListEtiquette#Line_Wrapping"&gt;netiquette issues&lt;/a&gt;
-- lines "should be" wrapped at 72 characters etc.)&lt;/p&gt;
&lt;p&gt;In Gmail, I therefore use plain-text compose, which is fine for the purposes
described above, but frustrating whenever you want to apply formatting
(obviously, you can't -- it's plain text). I tried using the usual replacements
for formatting like stars &amp;amp; co., and I don't know about your grandma, but
&lt;em&gt;mine&lt;/em&gt; certainly doesn't take *...* to mean emphasis.&lt;/p&gt;
&lt;p&gt;I thought the Markdown compose mode in Airmail would solve my problems -- I
could apply formatting if and when I wanted (using the frankly more streamlined
process of &lt;em&gt;typing it in&lt;/em&gt; rather than fumbling around for the right button in
the GUI) &lt;em&gt;and&lt;/em&gt; fill my paragraphs, because I somehow automatically assumed
there'd by a hard-wrap feature like in any decent editor (read: emacs or
vi). Markdown is plain text after all, isn't it?&lt;/p&gt;
&lt;p&gt;Long story short, as of yet, &lt;strong&gt;there isn't&lt;/strong&gt;. There isn't even one for the
plain-text compose mode, as far as I'm aware. So I added my two cents to
&lt;a href="http://feedback.airmailapp.com/forums/209001-airmail-mac-1-2/suggestions/4078595-add-line-wrap-for-plain-text-mails"&gt;this feature request thread&lt;/a&gt;
and went back to the Gmail in-browser UI.&lt;/p&gt;
&lt;h1&gt;Solution &lt;a name="solution"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;But then I realized (it took me a while, I'm still very much an OS X newbie):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;in OS X, you can define custom actions with shortcuts&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; for any
   application using Automator Services&lt;/li&gt;
&lt;li&gt;these actions can be easily set to receive text selected in the application
   as input&lt;/li&gt;
&lt;li&gt;these actions can also involve shell scripts&lt;/li&gt;
&lt;li&gt;there already &lt;em&gt;is&lt;/em&gt; a great (command line) program for filling paragraphs --
   it's called &lt;code&gt;par&lt;/code&gt;, and as much as I admire what Airmail's developers have
   achieved, it's unlikely that they'd come up with a more sophisticated
   hard-wrapping algorithm than &lt;code&gt;par&lt;/code&gt;'s simply as a side project for Airmail
   (see the EXAMPLES section in &lt;code&gt;man par&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With that in mind, you can have hard-wrapping in Markdown or plain-text Airmail
compose at your fingertips in no time flat. If you don't have &lt;code&gt;homebrew&lt;/code&gt;, start
by installing that (or any other ports manager that will allow you to install
&lt;code&gt;par&lt;/code&gt;; I'll assume &lt;code&gt;homebrew&lt;/code&gt; below) by pasting&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;at a Terminal prompt. Then:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;install &lt;code&gt;par&lt;/code&gt; with &lt;code&gt;brew install par&lt;/code&gt; at a Terminal prompt&lt;/li&gt;
&lt;li&gt;open Automator (e.g. by typing "Automator" into Spotlight) and create a new
   Service&lt;/li&gt;
&lt;li&gt;select the applications for which you want the service to be active (for me,
   that's just Airmail) and tick the "Output replaces selected text" box&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;drag the "Run Shell Script" action onto the workflow canvas, and as the
   shell script, paste in&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;PARINIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rTbgqR B=.,?_A_a Q=_s&amp;gt;|&amp;quot;&lt;/span&gt; /usr/local/bin/par 79
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;the $PARINIT environment variable contains the default recommended
  settings for &lt;code&gt;par&lt;/code&gt; (if you want to customize its behavior, you can -- good
  luck wrapping your head around &lt;code&gt;par&lt;/code&gt;'s manpage, though)&lt;/li&gt;
&lt;li&gt;you should set the full path to the &lt;code&gt;par&lt;/code&gt; executable, the shell spawned by
  the Service might not inherit your $PATH -- for &lt;code&gt;par&lt;/code&gt; installed via
  &lt;code&gt;homebrew&lt;/code&gt;, it's &lt;code&gt;/usr/local/bin/par&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;the parameter at the end is the max number of characters per
  line -- mailing list etiquette stipulates 72, I personally prefer the
  pythonesque 79, but it's your choice&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point, your service should look something like in the screenshot
below:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fill Paragraph Service in Automator" src="/output/images/fill-par.png" /&gt;&lt;/p&gt;
&lt;p&gt;Save it, open Keyboard preferences (type "Keyboard" into Spotlight), navigate
to Shortcuts → Services → Text and set a keyboard shortcut for your newly
created Service, e.g. Cmd+Opt+P. Next time you compose an e-mail in Airmail,
just select the entire text when you're done (Cmd+A), press Cmd+Opt+P, and
voilà! Your lines have been hardwrapped, your paragraphs filled :) (Same thing,
I know.)&lt;/p&gt;
&lt;p&gt;If the shortcut doesn't appear to work&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;, try fiddling around with it,
resetting it (maybe the one you've chosen conflicts with a pre-existing one?),
restarting Airmail, logging out and back in, rebooting... The custom shortcut
part is unfortunately the least reliable aspect of this whole setup. Automator
is a great idea, I was pleasantly surprised by it when I started using OS X a
few days back, but it could seriously use some bug-squashing.&lt;/p&gt;
&lt;p&gt;If you fail miserably at getting the shortcut to work, you can &lt;strong&gt;still access
your fill paragraph service via the menu&lt;/strong&gt; (select the text you want to
hard-wrap, then navigate to Airmail → Services → &amp;lt;name of your fill paragraph
service&gt;). Clicking around in a GUI is tedious (though hey -- it's the Apple
way after all, isn't it?), but it shouldn't be too much of a bother since you
need to do it only once per e-mail.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bottom line&lt;/strong&gt;: I am now officially completely sold on Airmail (even bought
the released version instead of using the free beta) and look forward to the
joy of using it!&lt;/p&gt;
&lt;p&gt;EDIT: In order to have the &lt;strong&gt;least trouble possible getting the shell script up
and running as a Service&lt;/strong&gt;, two rules of thumb:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Leave it completely up to OS X where it stores the Service (.workflow)
   file. This will probably be in &lt;code&gt;~/Library/Services&lt;/code&gt;, and I learnt the hard
   way not to tinker with it -- if &lt;code&gt;Services&lt;/code&gt; is a symlink instead of a real
   directory, the OS won't discover new Service files (though old ones will
   still be accessible).&lt;/li&gt;
&lt;li&gt;If the Service doesn't show up in the keyboard shortcuts menu after
   creation, try refreshing the service list with
   &lt;code&gt;/System/Library/CoreServices/pbs -update&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Those shortcuts are in fact quite buggy, especially those that you want
to be global (not specific to a concrete app) -- at least on Mavericks (OS
X 10.9). They tend to get disabled on a whim, especially if you tinker with
them, and are a pain to get working again (login, logout, reboot -- anything
goes). If anyone knows why, please let me know!&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="osx"></category><category term="par"></category><category term="airmail"></category><category term="automator"></category><category term="services"></category><category term="fill"></category><category term="wrap"></category><category term="lines"></category></entry><entry><title>Configuring Emacs Daemon on Mac OS X</title><link href="http://dlukes.github.io/output/configuring-emacs-daemon-on-mac-os-x.html" rel="alternate"></link><updated>2014-06-24T00:00:00+02:00</updated><author><name>dlukes</name></author><id>tag:dlukes.github.io,2014-06-24:output/configuring-emacs-daemon-on-mac-os-x.html</id><summary type="html">&lt;p&gt;Coming soon!&lt;/p&gt;</summary></entry></feed>